// Generated by https://quicktype.io
export interface PlayerInfo {
    _id:                             string;
    uuid:                            string;
    displayname:                     string;
    firstLogin:                      number;
    knownAliases:                    string[];
    knownAliasesLower:               string[];
    lastLogin:                       number;
    playername:                      string;
    achievementsOneTime:             string[];
    achievementPoints:               number;
    stats:                           Stats;
    achievements:                    { [key: string]: number };
    lastLogout:                      number;
    achievementTracking:             any[];
    achievementSync:                 AchievementSync;
    challenges:                      Challenges;
    networkExp:                      number;
    petConsumables:                  { [key: string]: number };
    vanityMeta:                      VanityMeta;
    friendRequestsUuid:              any[];
    levelingReward_0:                boolean;
    levelingReward_1:                boolean;
    parkourCheckpointBests:          ParkourCheckpointBests;
    quests:                          Quests;
    parkourCompletions:              ParkourCompletions;
    karma:                           number;
    lastAdsenseGenerateTime:         number;
    housingMeta:                     HousingMeta;
    mcVersionRp:                     string;
    eugene:                          Eugene;
    quickjoin_timestamp:             number;
    quickjoin_uses:                  number;
    monthlycrates:                   Monthlycrates;
    channel:                         string;
    achievementRewardsNew:           { [key: string]: number };
    levelingReward_2:                boolean;
    levelingReward_3:                boolean;
    levelingReward_5:                boolean;
    levelingReward_6:                boolean;
    levelingReward_7:                boolean;
    levelingReward_8:                boolean;
    levelingReward_10:               boolean;
    levelingReward_11:               boolean;
    levelingReward_12:               boolean;
    levelingReward_13:               boolean;
    levelingReward_14:               boolean;
    levelingReward_15:               boolean;
    levelingReward_16:               boolean;
    levelingReward_17:               boolean;
    levelingReward_18:               boolean;
    levelingReward_20:               boolean;
    levelingReward_21:               boolean;
    levelingReward_22:               boolean;
    levelingReward_23:               boolean;
    lastClaimedReward:               number;
    rewardHighScore:                 number;
    rewardScore:                     number;
    rewardStreak:                    number;
    totalDailyRewards:               number;
    totalRewards:                    number;
    petStats:                        PetStats;
    vanityFavorites:                 string;
    newPackageRank:                  string;
    levelUp_VIP:                     number;
    levelingReward_4:                boolean;
    levelingReward_9:                boolean;
    levelingReward_19:               boolean;
    levelingReward_24:               boolean;
    levelingReward_28:               boolean;
    levelingReward_30:               boolean;
    levelingReward_31:               boolean;
    levelingReward_33:               boolean;
    levelingReward_26:               boolean;
    levelingReward_36:               boolean;
    levelingReward_41:               boolean;
    levelingReward_44:               boolean;
    levelingReward_46:               boolean;
    levelingReward_54:               boolean;
    levelingReward_64:               boolean;
    levelingReward_74:               boolean;
    adsense_tokens:                  number;
    levelingReward_34:               boolean;
    levelUp_MVP_PLUS:                number;
    levelingReward_51:               boolean;
    rankPlusColor:                   string;
    levelingReward_71:               boolean;
    levelingReward_66:               boolean;
    levelingReward_61:               boolean;
    levelingReward_56:               boolean;
    questSettings:                   QuestSettings;
    levelingReward_25:               boolean;
    levelingReward_27:               boolean;
    levelingReward_29:               boolean;
    levelingReward_32:               boolean;
    levelingReward_35:               boolean;
    levelingReward_37:               boolean;
    levelingRewardeward_45:          boolean;
    levelingReward_47:               boolean;
    levelingReward_48:               boolean;
    levelingReward_49:               boolean;
    levelingReward_50:               boolean;
    levelingReward_52:               boolean;
    levelingReward_53:               boolean;
    levelingReward_55:               boolean;
    levelingReward_57:               boolean;
    levelingReward_58:               boolean;
    levelingReward_59:               boolean;
    levelingReward_60:               boolean;
    levelingReward_62:               boolean;
    levelingReward_63:               boolean;
    levelingReward_65:               boolean;
    levelingReward_67:               boolean;
    levelingReward_68:               boolean;
    levelingReward_69:               boolean;
    levelingReward_70:               boolean;
    levelingReward_72:               boolean;
    levelingReward_73:               boolean;
    levelingReward_75:               boolean;
    levelingReward_76:               boolean;
    levelingReward_77:               boolean;
    levelingReward_78:               boolean;
    levelingReward_79:               boolean;
    levelingReward_80:               boolean;
    currentCloak:                    string;
    particlePack:                    string;
    monthlyPackageRank:              string;
    mostRecentMonthlyPackageRank:    string;
    monthlyRankColor:                string;
    levelingReward_81:               boolean;
    currentClickEffect:              string;
    halloween2020Cooldowns:          { [key: string]: boolean };
    levelingReward_82:               boolean;
    achievementTotem:                AchievementTotem;
    levelingReward_83:               boolean;
    levelingReward_84:               boolean;
    levelingReward_85:               boolean;
    levelingReward_86:               boolean;
    levelingReward_87:               boolean;
    levelingReward_88:               boolean;
    claimed_century_cake:            number;
    levelingReward_89:               boolean;
    levelingReward_90:               boolean;
    levelingReward_91:               boolean;
    levelingReward_92:               boolean;
    levelingReward_93:               boolean;
    levelingReward_94:               boolean;
    levelingReward_95:               boolean;
    levelingReward_96:               boolean;
    adventRewards2020:               { [key: string]: number };
    completed_christmas_quests_2020: number;
    christmas2020Cooldowns:          Christmas2020Cooldowns;
    christmas2020Cooldowns2:         { [key: string]: boolean };
    levelingReward_97:               boolean;
    levelingReward_98:               boolean;
    levelingReward_99:               boolean;
    xmas2020_SKYWARS_1:              boolean;
    currentGadget:                   string;
    xmas2020_DUELS_3:                boolean;
    xmas2020_SKYWARS_2:              boolean;
    xmas2020_DUELS_1:                boolean;
    currentPet:                      string;
    giftingMeta:                     GiftingMeta;
    outfit:                          Outfit;
    mostRecentGameType:              string;
    completed_christmas_quests_2021: number;
}

export interface AchievementSync {
    quake_tiered: number;
}

export interface AchievementTotem {
    canCustomize:       boolean;
    allowed_max_height: number;
    unlockedParts:      string[];
    selectedParts:      Selected;
    unlockedColors:     string[];
    selectedColors:     Selected;
}

export interface Selected {
}

export interface Challenges {
    all_time: { [key: string]: number };
    day_j:    DayJ;
    day_k:    DayK;
    day_l:    Day;
    day_a:    DayA;
    day_b:    Day;
}

export interface DayA {
    DUELS__feed_the_void_challenge: number;
}

export interface Day {
    DUELS__feed_the_void_challenge:   number;
    DUELS__target_practice_challenge: number;
    BEDWARS__offensive:               number;
    BEDWARS__support?:                number;
}

export interface DayJ {
    BEDWARS__offensive:             number;
    BEDWARS__support:               number;
    DUELS__feed_the_void_challenge: number;
}

export interface DayK {
    SKYWARS__feeding_the_void_challenge: number;
    DUELS__feed_the_void_challenge:      number;
}

export interface Christmas2020Cooldowns {
    NORMAL0: boolean;
}

export interface Eugene {
    dailyTwoKExp: number;
}

export interface GiftingMeta {
    bundlesGiven:     number;
    giftsGiven:       number;
    realBundlesGiven: number;
    milestones:       string[];
}

export interface HousingMeta {
    firstHouseJoinMs:     number;
    tutorialStep:         string;
    allowedBlocks:        string[];
    packages:             string[];
    plotSize:             string;
    given_cookies_105067: string[];
    given_cookies_105079: string[];
    given_cookies_105081: string[];
    playerSettings:       PlayerSettings;
    playlist:             string;
    selectedChannels_v3:  string[];
    given_cookies_105086: string[];
    given_cookies_105089: string[];
}

export interface PlayerSettings {
    VISIBILITY: string;
    BORDER:     string;
}

export interface Monthlycrates {
    "8-2019":  The62020;
    "6-2020":  The62020;
    "7-2020":  The62020;
    "9-2020":  The92020;
    "10-2020": The12021;
    "11-2020": The12021;
    "12-2020": The12021;
    "1-2021":  The12021;
}

export interface The12021 {
    REGULAR:  boolean;
    VIP:      boolean;
    VIP_PLUS: boolean;
    MVP:      boolean;
    MVP_PLUS: boolean;
}

export interface The62020 {
    REGULAR: boolean;
}

export interface The92020 {
    VIP:     boolean;
    REGULAR: boolean;
}

export interface Outfit {
    LEGGINGS: string;
}

export interface ParkourCheckpointBests {
    SkywarsAug2017: { [key: string]: number };
    Duels:          { [key: string]: number };
    Bedwars:        { [key: string]: number };
    Prototype:      { [key: string]: number };
}

export interface ParkourCompletions {
    Duels:   Array<null[]>;
    Bedwars: Array<null[]>;
}

export interface PetStats {
    SLIME_BIG:          SlimeBig;
    COW_BABY:           CowBaby;
    VILLAGER_LIBRARIAN: CreeperPowered;
    CREEPER_POWERED:    CreeperPowered;
}

export interface CowBaby {
    name:     string;
    EXERCISE: null[];
    HUNGER:   null[];
    THIRST:   null[];
}

export interface CreeperPowered {
    name: string;
}

export interface SlimeBig {
    EXERCISE: null[];
    name:     string;
}

export interface QuestSettings {
    autoActivate: boolean;
}

export interface Quests {
    skywars_solo_win:                       HammerfestPonies;
    skywars_solo_kills:                     BedwarsDailyGifts;
    skywars_team_win:                       HammerfestPonies;
    skywars_team_kills:                     HammerfestPonies;
    skywars_arcade_win:                     HammerfestPonies;
    skywars_corrupt_win:                    HammerfestPonies;
    skywars_weekly_kills:                   HammerfestPonies;
    skywars_weekly_arcade_win_all:          HammerfestPonies;
    duels_player:                           BedwarsDailyGifts;
    duels_killer:                           BedwarsDailyGifts;
    duels_winner:                           BedwarsDailyGifts;
    duels_weekly_wins:                      HammerfestPonies;
    duels_weekly_kills:                     HammerfestPonies;
    bedwars_daily_win:                      BedwarsDailyGifts;
    bedwars_daily_one_more:                 BedwarsDailyGifts;
    bedwars_weekly_bed_elims:               HammerfestPonies;
    bedwars_weekly_dream_win:               HammerfestPonies;
    prototype_pit_daily_kills:              HammerfestPonies;
    prototype_pit_daily_contract:           ArakGroundhog;
    prototype_pit_weekly_gold:              ArakGroundhog;
    tnt_daily_win:                          HammerfestPonies;
    tnt_pvprun_daily:                       ArakGroundhog;
    tnt_pvprun_weekly:                      ArakGroundhog;
    tnt_bowspleef_weekly:                   ArakGroundhog;
    tnt_weekly_play:                        ArakGroundhog;
    tnt_tnttag_daily:                       HammerfestPonies;
    tnt_tnttag_weekly:                      HammerfestPonies;
    tnt_bowspleef_daily:                    ArakGroundhog;
    tnt_wizards_daily:                      ArakGroundhog;
    tnt_wizards_weekly:                     ArakGroundhog;
    tnt_tntrun_daily:                       HammerfestPonies;
    skywars_weekly_free_loot_chest:         BedwarsDailyGifts;
    skywars_daily_tokens:                   BedwarsDailyGifts;
    arcade_specialist:                      HammerfestPonies;
    arcade_gamer:                           HammerfestPonies;
    arcade_winner:                          HammerfestPonies;
    build_battle_player:                    BedwarsDailyGifts;
    build_battle_weekly:                    ArakGroundhog;
    build_battle_winner:                    HammerfestPonies;
    blitz_win:                              ArakGroundhog;
    blitz_kills:                            ArakGroundhog;
    blitz_loot_chest_daily:                 ArakGroundhog;
    blitz_loot_chest_weekly:                ArakGroundhog;
    blitz_weekly_master:                    ArakGroundhog;
    blitz_game_of_the_day:                  ArakGroundhog;
    tnt_tntrun_weekly:                      ArakGroundhog;
    skywars_halloween_harvest_2020:         ArakGroundhog;
    bedwars_daily_nightmares:               BedwarsDailyGifts;
    bedwars_weekly_pumpkinator:             BedwarsDailyGifts;
    mm_daily_power_play:                    ArakGroundhog;
    mm_daily_win:                           HammerfestPonies;
    mm_special_weekly_killer_instinct_2020: ArakGroundhog;
    mm_daily_target_kill:                   HammerfestPonies;
    mm_weekly_wins:                         ArakGroundhog;
    mm_weekly_murderer_kills:               ArakGroundhog;
    paintball_killer:                       ArakGroundhog;
    vampirez_daily_play:                    BedwarsDailyGifts;
    vampirez_daily_win:                     ArakGroundhog;
    vampirez_weekly_human_kill:             ArakGroundhog;
    vampirez_weekly_kill:                   ArakGroundhog;
    vampirez_daily_kill:                    ArakGroundhog;
    quake_daily_play:                       ArakGroundhog;
    vampirez_daily_human_kill:              ArakGroundhog;
    quake_daily_win:                        ArakGroundhog;
    gingerbread_bling_bling:                ArakGroundhog;
    gingerbread_maps:                       ArakGroundhog;
    walls_daily_play:                       ArakGroundhog;
    paintballer:                            ArakGroundhog;
    walls_daily_kill:                       ArakGroundhog;
    quake_daily_kill:                       ArakGroundhog;
    walls_daily_win:                        ArakGroundhog;
    vampirez_weekly_win:                    ArakGroundhog;
    walls_weekly:                           ArakGroundhog;
    gingerbread_mastery:                    ArakGroundhog;
    gingerbread_racer:                      ArakGroundhog;
    arena_weekly_play:                      ArakGroundhog;
    arena_daily_kills:                      ArakGroundhog;
    paintball_expert:                       ArakGroundhog;
    arena_daily_play:                       ArakGroundhog;
    quake_weekly_play:                      ArakGroundhog;
    arena_daily_wins:                       ArakGroundhog;
    build_battle_halloween:                 HammerfestPonies;
    uhc_dm:                                 ArakGroundhog;
    uhc_team:                               ArakGroundhog;
    uhc_solo:                               ArakGroundhog;
    solo_brawler:                           ArakGroundhog;
    uhc_madness:                            ArakGroundhog;
    uhc_weekly:                             ArakGroundhog;
    team_brawler:                           ArakGroundhog;
    mega_walls_play:                        ArakGroundhog;
    mega_walls_win:                         ArakGroundhog;
    mega_walls_weekly:                      ArakGroundhog;
    mega_walls_kill:                        ArakGroundhog;
    mega_walls_faithful:                    ArakGroundhog;
    bedwars_daily_gifts:                    BedwarsDailyGifts;
    skywars_special_north_pole:             HammerfestPonies;
    mm_special_weekly_santa:                ArakGroundhog;
    build_battle_christmas_weekly:          ArakGroundhog;
    build_battle_christmas:                 ArakGroundhog;
    blitz_special_daily_north_pole:         ArakGroundhog;
    uhc_weekly_special_cookie:              ArakGroundhog;
    tnt_weekly_special:                     ArakGroundhog;
}

export interface HammerfestPonies {
    completions: null[];
    active:      null[];
}

export interface ArakGroundhog {
    active: null[];
}

export interface BedwarsDailyGifts {
    completions: null[];
}

export interface Stats {
    Bedwars:       { [key: string]: null[] | boolean | number | string };
    Duels:         { [key: string]: null[] | boolean | number | string };
    MCGO:          Mcgo;
    GingerBread:   GingerBread;
    VampireZ:      VampireZ;
    Quake:         Paintball;
    Paintball:     Paintball;
    Legacy:        Legacy;
    SuperSmash:    SuperSmash;
    MurderMystery: MurderMystery;
    Arcade:        { [key: string]: number };
    SkyWars:       { [key: string]: null[] | boolean | number | string };
    TNTGames:      TNTGames;
    HungerGames:   HungerGames;
    Battleground:  Battleground;
    Pit:           Pit;
    Walls3:        Walls3;
    UHC:           Uhc;
    Arena:         Arena;
    Walls:         Arena;
    TrueCombat:    Paintball;
    SkyBlock:      SkyBlock;
    BuildBattle:   BuildBattle;
    Housing:       Housing;
}

export interface Arena {
    coins: number;
}

export interface Battleground {
    mage_spec:      string;
    chosen_class:   string;
    warrior_spec:   string;
    shaman_spec:    string;
    paladin_spec:   string;
    packages:       null[];
    selected_mount: string;
    coins:          number;
}

export interface BuildBattle {
    votes_Dinosaur:        number;
    coins:                 number;
    games_played:          number;
    monthly_coins_b:       number;
    score:                 number;
    teams_most_points:     number;
    total_votes:           number;
    weekly_coins_a:        number;
    votes_Camping:         number;
    "votes_Teddy Bear":    number;
    active_movement_trail: string;
    selected_backdrop:     string;
    monthly_coins_a:       number;
    weekly_coins_b:        number;
    wins:                  number;
    wins_solo_normal:      number;
    correct_guesses:       number;
    packages:              null[];
    super_votes:           number;
}

export interface GingerBread {
    booster_active:         string;
    packages:               null[];
    frame_active:           string;
    helmet_active:          string;
    skin_active:            string;
    shoes_active:           string;
    pants_active:           string;
    jacket_active:          string;
    engine_active:          string;
    horn:                   string;
    banana_hits_received:   number;
    box_pickups:            number;
    box_pickups_junglerush: number;
    box_pickups_monthly_b:  number;
    box_pickups_weekly_a:   number;
    coins_picked_up:        number;
    junglerush_plays:       number;
    laps_completed:         number;
    coins:                  number;
    lastTourneyAd:          number;
}

export interface Housing {
    packages: null[];
}

export interface HungerGames {
    packages:                null[];
    wins:                    number;
    wins_backup:             number;
    wins_teams_normal:       number;
    wins_solo_normal:        number;
    autoarmor:               boolean;
    arrows_hit:              number;
    arrows_hit_scout:        number;
    chests_opened:           number;
    chests_opened_scout:     number;
    damage_taken:            number;
    damage_taken_scout:      number;
    deaths:                  number;
    games_played:            number;
    games_played_scout:      number;
    potions_drunk:           number;
    potions_drunk_scout:     number;
    potions_thrown:          number;
    potions_thrown_scout:    number;
    time_played:             number;
    time_played_scout:       number;
    coins:                   number;
    arrows_fired:            number;
    arrows_fired_fisherman:  number;
    blitz_uses:              number;
    chests_opened_fisherman: number;
    damage:                  number;
    damage_fisherman:        number;
    damage_taken_fisherman:  number;
    games_played_fisherman:  number;
    potions_drunk_fisherman: number;
    time_played_fisherman:   number;
    arrows_fired_scout:      number;
    damage_scout:            number;
    exp_scout:               number;
    kills:                   number;
    kills_scout:             number;
    kills_solo_normal:       number;
    arrows_hit_knight:       number;
    chests_opened_knight:    number;
    damage_knight:           number;
    damage_taken_knight:     number;
    exp_knight:              number;
    games_played_knight:     number;
    potions_thrown_knight:   number;
    time_played_knight:      number;
    wins_scout:              number;
    scout:                   number;
    armorer:                 number;
    chests_opened_armorer:   number;
    damage_armorer:          number;
    damage_taken_armorer:    number;
    exp_armorer:             number;
    games_played_armorer:    number;
    kills_armorer:           number;
    time_played_armorer:     number;
    knight:                  number;
    lastTourneyAd:           number;
}

export interface Legacy {
    next_tokens_seconds: number;
    gingerbread_tokens:  number;
    tokens:              number;
    total_tokens:        number;
    vampirez_tokens:     number;
}

export interface Mcgo {
    game_wins_deathmatch: number;
    packages:             null[];
    headshot_kills:       number;
    grenadeKills:         number;
    pocket_change:        number;
    grenade_kills:        number;
    bombs_defused:        number;
    kills:                number;
    bombs_planted:        number;
    game_wins:            number;
    kills_deathmatch:     number;
    coins:                number;
}

export interface MurderMystery {
    murdermystery_books:                                             null[];
    detective_chance:                                                number;
    murderer_chance:                                                 number;
    coins:                                                           number;
    games:                                                           number;
    games_MURDER_CLASSIC:                                            number;
    "games_widow's_den":                                             number;
    "games_widow's_den_MURDER_CLASSIC":                              number;
    wins:                                                            number;
    wins_MURDER_CLASSIC:                                             number;
    "wins_widow's_den":                                              number;
    "wins_widow's_den_MURDER_CLASSIC":                               number;
    deaths:                                                          number;
    deaths_MURDER_CLASSIC:                                           number;
    deaths_library:                                                  number;
    deaths_library_MURDER_CLASSIC:                                   number;
    games_library:                                                   number;
    games_library_MURDER_CLASSIC:                                    number;
    wins_library:                                                    number;
    wins_library_MURDER_CLASSIC:                                     number;
    deaths_skyway_pier:                                              number;
    deaths_skyway_pier_MURDER_CLASSIC:                               number;
    games_skyway_pier:                                               number;
    games_skyway_pier_MURDER_CLASSIC:                                number;
    wins_skyway_pier:                                                number;
    wins_skyway_pier_MURDER_CLASSIC:                                 number;
    coins_pickedup:                                                  number;
    coins_pickedup_MURDER_CLASSIC:                                   number;
    coins_pickedup_san_peratico_v2:                                  number;
    coins_pickedup_san_peratico_v2_MURDER_CLASSIC:                   number;
    games_san_peratico_v2:                                           number;
    games_san_peratico_v2_MURDER_CLASSIC:                            number;
    wins_san_peratico_v2:                                            number;
    wins_san_peratico_v2_MURDER_CLASSIC:                             number;
    "coins_pickedup_widow's_den":                                    number;
    "coins_pickedup_widow's_den_MURDER_CLASSIC":                     number;
    "deaths_widow's_den":                                            number;
    "deaths_widow's_den_MURDER_CLASSIC":                             number;
    deaths_darkfall:                                                 number;
    deaths_darkfall_MURDER_CLASSIC:                                  number;
    games_darkfall:                                                  number;
    games_darkfall_MURDER_CLASSIC:                                   number;
    kills:                                                           number;
    kills_MURDER_CLASSIC:                                            number;
    kills_as_murderer:                                               number;
    kills_as_murderer_MURDER_CLASSIC:                                number;
    kills_as_murderer_darkfall:                                      number;
    kills_as_murderer_darkfall_MURDER_CLASSIC:                       number;
    kills_darkfall:                                                  number;
    kills_darkfall_MURDER_CLASSIC:                                   number;
    knife_kills:                                                     number;
    knife_kills_MURDER_CLASSIC:                                      number;
    knife_kills_darkfall:                                            number;
    knife_kills_darkfall_MURDER_CLASSIC:                             number;
    coins_pickedup_aquarium:                                         number;
    coins_pickedup_aquarium_MURDER_CLASSIC:                          number;
    deaths_aquarium:                                                 number;
    deaths_aquarium_MURDER_CLASSIC:                                  number;
    games_aquarium:                                                  number;
    games_aquarium_MURDER_CLASSIC:                                   number;
    coins_pickedup_cruise_ship:                                      number;
    coins_pickedup_cruise_ship_MURDER_CLASSIC:                       number;
    games_cruise_ship:                                               number;
    games_cruise_ship_MURDER_CLASSIC:                                number;
    wins_cruise_ship:                                                number;
    wins_cruise_ship_MURDER_CLASSIC:                                 number;
    coins_pickedup_hollywood:                                        number;
    coins_pickedup_hollywood_MURDER_CLASSIC:                         number;
    games_hollywood:                                                 number;
    games_hollywood_MURDER_CLASSIC:                                  number;
    wins_hollywood:                                                  number;
    wins_hollywood_MURDER_CLASSIC:                                   number;
    coins_pickedup_ancient_tomb:                                     number;
    coins_pickedup_ancient_tomb_MURDER_CLASSIC:                      number;
    games_ancient_tomb:                                              number;
    games_ancient_tomb_MURDER_CLASSIC:                               number;
    wins_ancient_tomb:                                               number;
    wins_ancient_tomb_MURDER_CLASSIC:                                number;
    bow_kills:                                                       number;
    bow_kills_MURDER_CLASSIC:                                        number;
    bow_kills_gold_rush:                                             number;
    bow_kills_gold_rush_MURDER_CLASSIC:                              number;
    coins_pickedup_gold_rush:                                        number;
    coins_pickedup_gold_rush_MURDER_CLASSIC:                         number;
    detective_wins:                                                  number;
    detective_wins_MURDER_CLASSIC:                                   number;
    detective_wins_gold_rush:                                        number;
    detective_wins_gold_rush_MURDER_CLASSIC:                         number;
    games_gold_rush:                                                 number;
    games_gold_rush_MURDER_CLASSIC:                                  number;
    kills_gold_rush:                                                 number;
    kills_gold_rush_MURDER_CLASSIC:                                  number;
    quickest_detective_win_time_seconds:                             number;
    quickest_detective_win_time_seconds_MURDER_CLASSIC:              number;
    quickest_detective_win_time_seconds_gold_rush:                   number;
    quickest_detective_win_time_seconds_gold_rush_MURDER_CLASSIC:    number;
    was_hero:                                                        number;
    was_hero_MURDER_CLASSIC:                                         number;
    was_hero_gold_rush:                                              number;
    was_hero_gold_rush_MURDER_CLASSIC:                               number;
    wins_gold_rush:                                                  number;
    wins_gold_rush_MURDER_CLASSIC:                                   number;
    coins_pickedup_snowfall:                                         number;
    coins_pickedup_snowfall_MURDER_CLASSIC:                          number;
    games_snowfall:                                                  number;
    games_snowfall_MURDER_CLASSIC:                                   number;
    kills_as_murderer_snowfall:                                      number;
    kills_as_murderer_snowfall_MURDER_CLASSIC:                       number;
    kills_snowfall:                                                  number;
    kills_snowfall_MURDER_CLASSIC:                                   number;
    knife_kills_snowfall:                                            number;
    knife_kills_snowfall_MURDER_CLASSIC:                             number;
    murderer_wins:                                                   number;
    murderer_wins_MURDER_CLASSIC:                                    number;
    murderer_wins_snowfall:                                          number;
    murderer_wins_snowfall_MURDER_CLASSIC:                           number;
    quickest_murderer_win_time_seconds:                              number;
    quickest_murderer_win_time_seconds_MURDER_CLASSIC:               number;
    quickest_murderer_win_time_seconds_snowfall:                     number;
    quickest_murderer_win_time_seconds_snowfall_MURDER_CLASSIC:      number;
    thrown_knife_kills:                                              number;
    thrown_knife_kills_MURDER_CLASSIC:                               number;
    thrown_knife_kills_snowfall:                                     number;
    thrown_knife_kills_snowfall_MURDER_CLASSIC:                      number;
    wins_snowfall:                                                   number;
    wins_snowfall_MURDER_CLASSIC:                                    number;
    coins_pickedup_hypixel_world:                                    number;
    coins_pickedup_hypixel_world_MURDER_CLASSIC:                     number;
    detective_wins_hypixel_world:                                    number;
    detective_wins_hypixel_world_MURDER_CLASSIC:                     number;
    games_hypixel_world:                                             number;
    games_hypixel_world_MURDER_CLASSIC:                              number;
    wins_hypixel_world:                                              number;
    wins_hypixel_world_MURDER_CLASSIC:                               number;
    coins_pickedup_mountain:                                         number;
    coins_pickedup_mountain_MURDER_CLASSIC:                          number;
    games_mountain:                                                  number;
    games_mountain_MURDER_CLASSIC:                                   number;
    wins_mountain:                                                   number;
    wins_mountain_MURDER_CLASSIC:                                    number;
    bow_kills_transport:                                             number;
    bow_kills_transport_MURDER_CLASSIC:                              number;
    coins_pickedup_transport:                                        number;
    coins_pickedup_transport_MURDER_CLASSIC:                         number;
    games_transport:                                                 number;
    games_transport_MURDER_CLASSIC:                                  number;
    kills_transport:                                                 number;
    kills_transport_MURDER_CLASSIC:                                  number;
    was_hero_transport:                                              number;
    was_hero_transport_MURDER_CLASSIC:                               number;
    wins_transport:                                                  number;
    wins_transport_MURDER_CLASSIC:                                   number;
    deaths_gold_rush:                                                number;
    deaths_gold_rush_MURDER_CLASSIC:                                 number;
    coins_pickedup_library:                                          number;
    coins_pickedup_library_MURDER_CLASSIC:                           number;
    coins_pickedup_archives:                                         number;
    coins_pickedup_archives_MURDER_CLASSIC:                          number;
    deaths_archives:                                                 number;
    deaths_archives_MURDER_CLASSIC:                                  number;
    games_archives:                                                  number;
    games_archives_MURDER_CLASSIC:                                   number;
    wins_archives:                                                   number;
    wins_archives_MURDER_CLASSIC:                                    number;
    deaths_hypixel_world:                                            number;
    deaths_hypixel_world_MURDER_CLASSIC:                             number;
    detective_wins_snowfall:                                         number;
    detective_wins_snowfall_MURDER_CLASSIC:                          number;
    showqueuebook:                                                   boolean;
    deaths_mountain:                                                 number;
    deaths_mountain_MURDER_CLASSIC:                                  number;
    coins_pickedup_skyway_pier:                                      number;
    coins_pickedup_skyway_pier_MURDER_CLASSIC:                       number;
    kills_as_murderer_skyway_pier:                                   number;
    kills_as_murderer_skyway_pier_MURDER_CLASSIC:                    number;
    kills_skyway_pier:                                               number;
    kills_skyway_pier_MURDER_CLASSIC:                                number;
    knife_kills_skyway_pier:                                         number;
    knife_kills_skyway_pier_MURDER_CLASSIC:                          number;
    thrown_knife_kills_skyway_pier:                                  number;
    thrown_knife_kills_skyway_pier_MURDER_CLASSIC:                   number;
    kills_as_murderer_gold_rush:                                     number;
    kills_as_murderer_gold_rush_MURDER_CLASSIC:                      number;
    knife_kills_gold_rush:                                           number;
    knife_kills_gold_rush_MURDER_CLASSIC:                            number;
    coins_pickedup_towerfall:                                        number;
    coins_pickedup_towerfall_MURDER_CLASSIC:                         number;
    games_towerfall:                                                 number;
    games_towerfall_MURDER_CLASSIC:                                  number;
    wins_towerfall:                                                  number;
    wins_towerfall_MURDER_CLASSIC:                                   number;
    detective_wins_ancient_tomb:                                     number;
    detective_wins_ancient_tomb_MURDER_CLASSIC:                      number;
    quickest_detective_win_time_seconds_ancient_tomb:                number;
    quickest_detective_win_time_seconds_ancient_tomb_MURDER_CLASSIC: number;
    deaths_towerfall:                                                number;
    deaths_towerfall_MURDER_CLASSIC:                                 number;
    kills_as_murderer_towerfall:                                     number;
    kills_as_murderer_towerfall_MURDER_CLASSIC:                      number;
    kills_towerfall:                                                 number;
    kills_towerfall_MURDER_CLASSIC:                                  number;
    knife_kills_towerfall:                                           number;
    knife_kills_towerfall_MURDER_CLASSIC:                            number;
    thrown_knife_kills_towerfall:                                    number;
    thrown_knife_kills_towerfall_MURDER_CLASSIC:                     number;
    deaths_ancient_tomb:                                             number;
    deaths_ancient_tomb_MURDER_CLASSIC:                              number;
    deaths_cruise_ship:                                              number;
    deaths_cruise_ship_MURDER_CLASSIC:                               number;
    coins_pickedup_headquarters:                                     number;
    coins_pickedup_headquarters_MURDER_CLASSIC:                      number;
    games_headquarters:                                              number;
    games_headquarters_MURDER_CLASSIC:                               number;
    wins_headquarters:                                               number;
    wins_headquarters_MURDER_CLASSIC:                                number;
    coins_pickedup_archives_top_floor:                               number;
    coins_pickedup_archives_top_floor_MURDER_CLASSIC:                number;
    games_archives_top_floor:                                        number;
    games_archives_top_floor_MURDER_CLASSIC:                         number;
    wins_archives_top_floor:                                         number;
    wins_archives_top_floor_MURDER_CLASSIC:                          number;
    trap_kills:                                                      number;
    trap_kills_MURDER_CLASSIC:                                       number;
    trap_kills_towerfall:                                            number;
    trap_kills_towerfall_MURDER_CLASSIC:                             number;
    was_hero_towerfall:                                              number;
    was_hero_towerfall_MURDER_CLASSIC:                               number;
    coins_pickedup_MURDER_ASSASSINS:                                 number;
    coins_pickedup_hypixel_world_MURDER_ASSASSINS:                   number;
    deaths_MURDER_ASSASSINS:                                         number;
    deaths_hypixel_world_MURDER_ASSASSINS:                           number;
    games_MURDER_ASSASSINS:                                          number;
    games_hypixel_world_MURDER_ASSASSINS:                            number;
    kills_MURDER_ASSASSINS:                                          number;
    kills_hypixel_world:                                             number;
    kills_hypixel_world_MURDER_ASSASSINS:                            number;
    knife_kills_MURDER_ASSASSINS:                                    number;
    knife_kills_hypixel_world:                                       number;
    knife_kills_hypixel_world_MURDER_ASSASSINS:                      number;
    coins_pickedup_library_MURDER_ASSASSINS:                         number;
    deaths_library_MURDER_ASSASSINS:                                 number;
    games_library_MURDER_ASSASSINS:                                  number;
    coins_pickedup_archives_MURDER_ASSASSINS:                        number;
    deaths_archives_MURDER_ASSASSINS:                                number;
    games_archives_MURDER_ASSASSINS:                                 number;
    kills_archives:                                                  number;
    kills_archives_MURDER_ASSASSINS:                                 number;
    knife_kills_archives:                                            number;
    knife_kills_archives_MURDER_ASSASSINS:                           number;
    deaths_hollywood:                                                number;
    deaths_hollywood_MURDER_CLASSIC:                                 number;
    coins_pickedup_snowfall_MURDER_ASSASSINS:                        number;
    deaths_snowfall:                                                 number;
    deaths_snowfall_MURDER_ASSASSINS:                                number;
    games_snowfall_MURDER_ASSASSINS:                                 number;
    bow_kills_MURDER_ASSASSINS:                                      number;
    bow_kills_archives_top_floor:                                    number;
    bow_kills_archives_top_floor_MURDER_ASSASSINS:                   number;
    coins_pickedup_archives_top_floor_MURDER_ASSASSINS:              number;
    deaths_archives_top_floor:                                       number;
    deaths_archives_top_floor_MURDER_ASSASSINS:                      number;
    games_archives_top_floor_MURDER_ASSASSINS:                       number;
    kills_archives_top_floor:                                        number;
    kills_archives_top_floor_MURDER_ASSASSINS:                       number;
    knife_kills_archives_top_floor:                                  number;
    knife_kills_archives_top_floor_MURDER_ASSASSINS:                 number;
    deaths_skyway_pier_MURDER_ASSASSINS:                             number;
    games_skyway_pier_MURDER_ASSASSINS:                              number;
    kills_skyway_pier_MURDER_ASSASSINS:                              number;
    knife_kills_skyway_pier_MURDER_ASSASSINS:                        number;
    coins_pickedup_towerfall_MURDER_ASSASSINS:                       number;
    games_towerfall_MURDER_ASSASSINS:                                number;
    kills_towerfall_MURDER_ASSASSINS:                                number;
    knife_kills_towerfall_MURDER_ASSASSINS:                          number;
    wins_MURDER_ASSASSINS:                                           number;
    wins_towerfall_MURDER_ASSASSINS:                                 number;
    coins_pickedup_hollywood_MURDER_ASSASSINS:                       number;
    deaths_hollywood_MURDER_ASSASSINS:                               number;
    games_hollywood_MURDER_ASSASSINS:                                number;
    kills_hollywood:                                                 number;
    kills_hollywood_MURDER_ASSASSINS:                                number;
    knife_kills_hollywood:                                           number;
    knife_kills_hollywood_MURDER_ASSASSINS:                          number;
    deaths_towerfall_MURDER_ASSASSINS:                               number;
    thrown_knife_kills_MURDER_ASSASSINS:                             number;
    thrown_knife_kills_towerfall_MURDER_ASSASSINS:                   number;
    mm_christmas_chests:                                             number;
}

export interface Paintball {
    packages: null[];
    coins:    number;
}

export interface Pit {
    profile:       null[];
    pit_stats_ptl: null[];
}

export interface SkyBlock {
    profiles: null[];
}

export interface SuperSmash {
    lastLevel_THE_BULK:      number;
    active_class:            string;
    class_stats:             null[];
    damage_dealt:            number;
    damage_dealt_normal:     number;
    deaths:                  number;
    deaths_normal:           number;
    games:                   number;
    games_normal:            number;
    losses:                  number;
    losses_normal:           number;
    quits:                   number;
    smashed:                 number;
    smashed_normal:          number;
    win_streak:              number;
    lastLevel_CAKE_MONSTER:  number;
    coins:                   number;
    ONE_V_JUAN_firstGame:    number;
    ONE_V_JUAN_gamesDay:     number;
    assists:                 number;
    assists_normal:          number;
    friend_losses:           number;
    friend_losses_normal:    number;
    friend_wins:             number;
    friend_wins_normal:      number;
    kills:                   number;
    kills_normal:            number;
    one_v_one_losses:        number;
    one_v_one_losses_normal: number;
    one_v_one_wins:          number;
    one_v_one_wins_normal:   number;
    smasher:                 number;
    smasher_normal:          number;
    wins:                    number;
    wins_normal:             number;
    xp_CAKE_MONSTER:         number;
    lastLevel_BOTMUN:        number;
    xp_BOTMUN:               number;
    smash_level_total:       number;
    smashLevel:              number;
    xp_GENERAL_CLUCK:        number;
    lastLevel_GENERAL_CLUCK: number;
    xp_THE_BULK:             number;
}

export interface TNTGames {
    packages:                        null[];
    run_potions_splashed_on_players: number;
    record_tntrun:                   number;
    coins:                           number;
    deaths_tntrun:                   number;
    winstreak:                       number;
    new_spleef_repulsor:             number;
    new_spleef_tripleshot:           number;
    new_bloodwizard_regen:           number;
    new_firewizard_regen:            number;
    new_firewizard_explode:          number;
    new_witherwizard_explode:        number;
    new_tntrun_double_jumps:         number;
    new_tntag_speedy:                number;
    new_witherwizard_regen:          number;
    new_spleef_double_jumps:         number;
    wins:                            number;
    new_kineticwizard_regen:         number;
    new_kineticwizard_explode:       number;
    new_icewizard_explode:           number;
    new_bloodwizard_explode:         number;
    new_pvprun_double_jumps:         number;
    new_icewizard_regen:             number;
    record_pvprun:                   number;
    kills_pvprun:                    number;
    deaths_pvprun:                   number;
    kills_tntag:                     number;
    flags:                           null[];
    deaths_bowspleef:                number;
    tags_bowspleef:                  number;
    tag_slowitdown:                  number;
    tag_speeditup:                   number;
    new_tntrun_speed_potions:        number;
    new_tntrun_slowness_potions:     number;
    tag_blastprotection:             number;
    wins_pvprun:                     number;
    new_selected_hat:                string;
    privategames:                    null[];
    wizards_selected_class:          string;
    new_stormwizard_explode:         number;
    new_stormwizard_regen:           number;
    new_toxicwizard_explode:         number;
    new_hydrowizard_regen:           number;
    new_hydrowizard_explode:         number;
    new_hydrowizard_deaths:          number;
    new_stormwizard_damage_taken:    number;
    kills_capture:                   number;
    new_stormwizard_healing:         number;
    new_stormwizard_assists:         number;
    assists_capture:                 number;
    points_capture:                  number;
    new_stormwizard_deaths:          number;
    new_hydrowizard_damage_taken:    number;
    kinetic_healing_capture:         number;
    new_stormwizard_kills:           number;
    new_hydrowizard_healing:         number;
    deaths_capture:                  number;
    air_time_capture:                number;
}

export interface Uhc {
    coins:               number;
    clearup_achievement: boolean;
    saved_stats:         boolean;
    equippedKit:         string;
    deaths:              number;
}

export interface VampireZ {
    updated_stats:          boolean;
    coins:                  number;
    most_vampire_kills_new: number;
    human_deaths:           number;
}

export interface Walls3 {
    coins:    number;
    classes:  null[];
    packages: null[];
}

export interface VanityMeta {
    packages: string[];
}
